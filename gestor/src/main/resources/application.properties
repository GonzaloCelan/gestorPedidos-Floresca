# =========================
#   APP / SERVER (Railway)
# =========================
spring.application.name=gestor
# Railway inyecta PORT. En local usa 8080.
server.port=${PORT:8080}

# Si tu app va en la raíz del dominio, dejalo vacío (recomendado).
# Si algún día la servís bajo /gestor, descomenta y ajusta:
# server.servlet.context-path=/gestor

# Para proxies/HTTPS detrás de Railway
server.forward-headers-strategy=framework

# Compresión HTTP (ahorra ancho de banda)
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/javascript,application/json,application/xml

# =========================
#   DATASOURCE (MySQL)
# =========================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Usa primero las vars de Railway (MYSQLHOST, etc.). Si no existen, cae a tus valores locales.
spring.datasource.url=jdbc:mysql://${MYSQLHOST:${DB_HOST:localhost}}:${MYSQLPORT:${DB_PORT:3306}}/${MYSQLDATABASE:${DB_NAME:floresta}}?useUnicode=true&characterEncoding=utf8&useSSL=true&requireSSL=false&serverTimezone=America/Argentina/Buenos_Aires
spring.datasource.username=${MYSQLUSER:${DB_USER:root}}
spring.datasource.password=${MYSQLPASSWORD:${DB_PASSWORD:istea}}

# Pool Hikari (prudente para planes chicos de Railway)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:5}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN:1}
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000

# =========================
#   JPA / HIBERNATE
# =========================
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=none          # En prod, no tocar el esquema automáticamente
spring.jpa.show-sql=${JPA_SHOW_SQL:false}   # En local podés export JPA_SHOW_SQL=true
spring.jpa.properties.hibernate.format_sql=false
# Zona horaria consistente (opcional: usá UTC si preferís)
spring.jpa.properties.hibernate.jdbc.time_zone=America/Argentina/Buenos_Aires
# Nombres de tablas/cols tal cual los declarás (sin transformaciones)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# =========================
#   LOGGING
# =========================
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=INFO
# Para bajar el WARN del GET no soportado (si te molesta), podés subir a ERROR:
# logging.level.org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver=ERROR

# =========================
#   SECURITY (BASIC OPCIONAL)
# =========================
# No hardcodees credenciales en el repo. Si usás BasicAuth para /actuator o algo simple:
spring.security.user.name=${ADMIN_USER:admin}
spring.security.user.password=${ADMIN_PASS:admin}
# En Railway seteá ADMIN_USER y ADMIN_PASS; o borrá estas 2 líneas si no usás BasicAuth.

# =========================
#   STATIC / PWA
# =========================
# Sirve /sw.js, /manifest.webmanifest, /icons/* desde /static
spring.web.resources.add-mappings=true
